version: '3.8'
services:
  backend:
    volumes:
      - "./:/app"
    build:
      context: .
      dockerfile: Dockerfile-gpu 
    depends_on:
      - fast__redis
      - fast__postgres
    networks:
      - fast_network
    command: ["/app/wait-for-it.sh", "fast__postgres:5432","-t","60","--","/app/entrypoint.sh"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  celery:
    volumes:
      - "./:/app"
      - "${EXTERNAL_RESOURCE_DIR:-./workspace}:/app/ext"
    build:
      context: .
      dockerfile: Dockerfile-gpu 
    depends_on:
      - fast__redis
      - fast__postgres
    networks:
      - fast_network
    command: ["/app/entrypoint_celery.sh"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
  gui:
    build:
      context: ./gui
      args:
        NEXT_PUBLIC_API_BASE_URL: "/api"
    networks:
      - fast_network
#    volumes:
#      - ./gui:/app
#      - /app/node_modules/
#      - /app/.next/
  fast__redis:
    image: "redis/redis-stack-server:latest"
    networks:
      - fast_network
#    uncomment to expose redis port to host
#    ports:
#      - "6379:6379"
    volumes:
      - redis_data:/data

  fast__postgres:
    image: "docker.io/library/postgres:15"
    environment:
      - POSTGRES_USER=fastagi
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=fast_agi_main
    volumes:
      - fastagi_postgres_data:/var/lib/postgresql/data/
    networks:
      - fast_network
#    uncomment to expose postgres port to host
#    ports:
#      - "5432:5432"

  proxy:
    image: nginx:stable-alpine
    ports:
      - "3000:80"
    networks:
      - fast_network
    depends_on:
      - backend
      - gui
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

networks:
  fast_network:
    driver: bridge
volumes:
  fastagi_postgres_data:
  redis_data:
